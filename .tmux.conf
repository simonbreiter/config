# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Glorious 256 colors!
set -g default-terminal "screen-256color"

# Colors
set-option -g status-bg colour235
set-option -g status-fg colour240

set -g window-status-style fg=colour240 
set -g window-status-current-style fg=colour253

set -g pane-border-style fg=colour240
set -g pane-active-border-style fg=colour240

# Set esc delay in nvim to 0
set -sg escape-time 0

# Use system clipboard
set-option -g default-command "reattach-to-user-namespace -l fish"

# Create new window with current path
bind-key c new-window -c "#{pane_current_path}"

# Split window with current path
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# Enable mouse mode
set -g mouse on

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# Status bar
set-option -g status on

set -g status-left-length 50
set -g status-left ""

set -g status-right-length 80
set -g status-right "#[fg=colour242] #(date)"

# Refresh status bar every minute
set -g status-interval 60

# center window list for clarity
set -g status-justify left     

# position the status bar
set-option -g status-position bottom

set -g focus-events on
